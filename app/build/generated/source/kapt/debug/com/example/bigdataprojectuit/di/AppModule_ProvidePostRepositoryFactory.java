// Generated by Dagger (https://dagger.dev).
package com.example.bigdataprojectuit.di;

import com.example.bigdataprojectuit.data.remote.ApiService;
import com.example.bigdataprojectuit.data.repository.PostRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvidePostRepositoryFactory implements Factory<PostRepository> {
  private final Provider<ApiService> apiServiceProvider;

  public AppModule_ProvidePostRepositoryFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public PostRepository get() {
    return providePostRepository(apiServiceProvider.get());
  }

  public static AppModule_ProvidePostRepositoryFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new AppModule_ProvidePostRepositoryFactory(apiServiceProvider);
  }

  public static PostRepository providePostRepository(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providePostRepository(apiService));
  }
}
