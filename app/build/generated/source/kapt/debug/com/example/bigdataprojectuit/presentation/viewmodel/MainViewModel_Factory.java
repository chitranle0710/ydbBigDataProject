// Generated by Dagger (https://dagger.dev).
package com.example.bigdataprojectuit.presentation.viewmodel;

import com.example.bigdataprojectuit.domain.usecase.GetPostsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<GetPostsUseCase> getPostsUseCaseProvider;

  public MainViewModel_Factory(Provider<GetPostsUseCase> getPostsUseCaseProvider) {
    this.getPostsUseCaseProvider = getPostsUseCaseProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(getPostsUseCaseProvider.get());
  }

  public static MainViewModel_Factory create(Provider<GetPostsUseCase> getPostsUseCaseProvider) {
    return new MainViewModel_Factory(getPostsUseCaseProvider);
  }

  public static MainViewModel newInstance(GetPostsUseCase getPostsUseCase) {
    return new MainViewModel(getPostsUseCase);
  }
}
